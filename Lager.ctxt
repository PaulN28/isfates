#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Eine\ Klasse\ Lager\ die\ es\ ermoeglicht\ verschiedene\ Artikel\ zu\ bearbeiten\r\n\r\n\ @Paul\ Nicolas\ &\ Nils\ Gamlin\r\n\ @date\ 01/12/2018\r\n
comment1.params=name\ maxAnzArtikel
comment1.target=Lager(java.lang.String,\ int)
comment1.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ Lager\r\n\r\n\ @param\ name\ Name\ des\ Lagers\r\n\ @param\ maxAnzartikelen\ \ maximale\ Anzahl\ an\ anzulegenden\ Artikeln\r\n
comment10.params=prozentsatz
comment10.target=void\ aenderePreisFuerAlleArtikel(double)
comment11.params=
comment11.target=java.lang.String\ ausgebenBestandsListe()
comment11.text=\r\n\ erzeugt\ einen\ String,\ der\ eine\ Bestandsliste\ repraesentiert\r\n\ @return\ Eine\ formatierte\ Bestandsliste\r\n
comment12.params=artikelnummer
comment12.target=int\ findeArtikel(int)
comment12.text=\r\n\ Interne\ Methode\ findeArtikel\ zur\ Vereinfachung\ anderer\r\n\ Methoden\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @return\ \ Index\ des\ gesuchten\ Artikels\ oder\ -1\r\n\r\n
comment13.params=
comment13.target=int\ getAnzArtikel()
comment14.params=
comment14.target=int\ getMaxAnzArtikel()
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ Lager-Objekt\ als\ Zeichenkette\ aufbereiten;\r\n\ verwendet\ implizit\ die\ toString-Methode\ von\ Artikel\r\n\r\n\ @return\ \ Zeichenkette\r\n\r\n
comment16.params=bedingung\ msg
comment16.target=void\ check(boolean,\ java.lang.String)
comment2.params=
comment2.target=Lager()
comment3.params=name
comment3.target=void\ setName(java.lang.String)
comment4.params=
comment4.target=java.lang.String\ getName()
comment5.params=artikel
comment5.target=void\ legeArtikelAn(Artikel)
comment5.text=\r\n\ Anlegen\ eines\ Artikels.\ Es\ ist\ zu\ pruefen,\ ob\ die\r\n\ Artikelnummer\ bereits\ vergeben\ wurde\ und\ ob\ das\r\n\ Lager\ bereits\ voll\ ist.\r\n\r\n\ @param\ \ artikel\ \ ein\ Objekt\ der\ Klasse\ Artikel\r\n
comment6.params=artikelnummer
comment6.target=void\ loescheArtikel(int)
comment6.text=\r\n\ Artikel\ loeschen,\ wenn\ die\ Artikelnummer\ nicht\ existiert\ wird\ eine\ Fehlermeldung\ geworfen\r\n\r\n\ @param\ \ artikelnummer\ zu\ uebergebende\ Artikelnummer\r\n\r\n
comment7.params=artikelnummer\ bestand
comment7.target=void\ zugang(int,\ int)
comment7.text=\r\n\ Zugang\ von\ Artikeln\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ bestand\ einzuzahlender\ Bestand\ (>\ 0)\r\n
comment8.params=artikelnummer\ bestand
comment8.target=void\ abgang(int,\ int)
comment8.text=\r\n\ Abgang\ von\ Artikeln\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ bestand\ \ \ abuzahlende\ Menge\ (>\ 0)\r\n
comment9.params=artikelnummer\ prozentsatz
comment9.target=void\ aenderePreis(int,\ double)
comment9.text=\r\n\ Preis\ von\ Artikel(n)\ aendern\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ prozentsatz\ \ \ \ abuzahlende\ Menge\ (>\ 0)\r\n
numComments=17
