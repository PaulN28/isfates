#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Eine\ Klasse\ Lager\ die\ es\ ermoeglicht\ verschiedene\ Artikel\ zu\ bearbeiten\r\n\r\n\ @author\ Paul\ Nicolas\ &\ Nils\ Gamlin\r\n\ @date\ 01/12/2018\r\n
comment1.params=name\ maxAnzArtikel
comment1.target=Lager(java.lang.String,\ int)
comment1.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ Lager\r\n\r\n\ @param\ name\ Name\ des\ Lagers\r\n\ @param\ maxAnzArtikel\ \ maximale\ Anzahl\ an\ anzulegenden\ Artikeln\r\n
comment10.params=prozentsatz
comment10.target=void\ aenderePreisFuerAlleArtikel(double)
comment11.params=
comment11.target=java.lang.String\ ausgebenBestandsListe()
comment11.text=\r\n\ erzeugt\ einen\ String,\ der\ eine\ Bestandsliste\ repraesentiert\r\n\ @return\ Eine\ formatierte\ Bestandsliste\r\n
comment12.params=artikelnummer
comment12.target=int\ findeArtikel(int)
comment12.text=\r\n\ Interne\ Methode\ findeArtikel\ zur\ Vereinfachung\ anderer\r\n\ Methoden\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @return\ \ Index\ des\ gesuchten\ Artikels\ oder\ -1\r\n\r\n
comment13.params=
comment13.target=int\ getAnzArtikel()
comment14.params=
comment14.target=int\ getMaxAnzArtikel()
comment15.params=sortierKriterium
comment15.target=Artikel[]\ getSorted(java.util.function.BiPredicate)
comment15.text=\r\n\ Gibt\ Artikel\ als\ sortierte\ Liste\ zurueck.\ Benutzt\ die\ sort()\ Methode\ um\ of\ die\ Liste\ zu\ iterieren.\r\n\ Die\ Methode\ ist\ so\ implementiert,dass\ das\ Sortierkriterium\ als\ Parameter\ an\ die\ Methode\ uebergeben\ wird.\r\n\r\n\ @param\ BiPredicate<Artikel,\ Artikel>\ Sortierkriterium\r\n\ @return\ Artikel[]\ sortierte\ Liste\r\n
comment16.params=sortKriterium\ artikelArray
comment16.target=void\ sort(java.util.function.BiPredicate,\ Artikel[])
comment16.text=\r\n\ Iteriert\ ueber\ ein\ gegebenes\ Array,\ und\ sortiert\ diesen\ mithilfe\ des\ Sortierkriteriums\r\n\r\n\ @param\ BiPredicate<Artikel,\ Artikel>\ Sortierkriterium\r\n\ @param\ Artikel[]\ Array\r\n
comment17.params=filterFunction
comment17.target=java.util.ArrayList\ filter(java.util.function.Predicate)
comment17.text=\r\n\ Gibt\ die\ Artikel\ des\ Lagers\ zurueck\ welche\ ein\ bestimmtes\ Filterkriterium\ erfuellen.\r\n\r\n\ @param\ Predicate<Artikel>\ Filterkriterium\r\n\ @return\ ArrayList<Artikel>\ Arrayliste\ mit\ den\ gefilterten\ Artikel\r\n
comment18.params=operation
comment18.target=void\ applyToArticles(java.util.function.Consumer)
comment18.text=\r\n\ Wendet\ die\ uebergegebene\ Operation\ auf\ alle\ Artikel\ des\ Lagers.\r\n\r\n\ @param\ Consumer<Artikel>\ Operation\ die\ durchgefuehrt\ werden\ soll\r\n
comment19.params=operation\ filterFunction
comment19.target=void\ applyToSomeArticles(java.util.function.Consumer,\ java.util.function.Predicate)
comment19.text=\r\n\ Wendet\ die\ uebergegebene\ Operation\ auf\ alle\ Artikel\ des\ Lagers\ die\ dem\ Filterkriterium\ entsprechen\ aus.\r\n\r\n\ @param\ Consumer<Artikel>\ Operation\ die\ durchgefuehrt\ werden\ soll\r\n\ @param\ Predicate<Artikel>\ Filterkriterium\ \r\n
comment2.params=
comment2.target=Lager()
comment20.params=sortKriterium\ filterKriterium
comment20.target=Artikel[]\ getArticles(java.util.function.BiPredicate,\ java.util.function.Predicate)
comment20.text=\r\n\ Gibt\ eine\ sortierte\ Liste\ der\ Artikel\ zurueck,\ welche\ ein\ bestimmtes\ Suchkriterium\ erfuellen.\r\n\r\n\ @param\ BiPredicate<Artikel,\ Artikel>\ Sortierkriterium\r\n\ @param\ Predicate<Artikel>\ Filterkriterium\ \r\n\r\n\ @return\ Artikel[]\ gefiltertes\ und\ sortiertes\ Array\r\n
comment21.params=filterCriterias
comment21.target=void\ filterAll(java.util.function.Predicate[])
comment21.text=\r\n\ Nimmt\ eine\ beliebige\ Menge\ an\ Filterkriterien\ als\ Parameter\ entgegen\ \r\n\ und\ gibt\ die\ Artikel\ des\ Lagers\ zurueck\ die\ alle\ Filterkriterien\ erfuellen\r\n\r\n\ @param\ Predicate<Artikel>...\ beliebig\ viele\ Sortierkriterien.\r\n\r\n\ @return\ Artikel[]\ gefiltertes\ und\ sortiertes\ Array\r\n
comment22.params=
comment22.target=java.lang.String\ toString()
comment22.text=\r\n\ Lager-Objekt\ als\ Zeichenkette\ aufbereiten;\r\n\ verwendet\ implizit\ die\ toString-Methode\ von\ Artikel\r\n\r\n\ @return\ \ Zeichenkette\r\n\r\n
comment23.params=bedingung\ msg
comment23.target=void\ check(boolean,\ java.lang.String)
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=public\ static\ void\ main(String[]\ args){\r\n\ \ \ \ Artikel\ trikot\ \=\ new\ Artikel(8521,\ "trikot",\ 12,\ 89);\r\n\ \ \ \ Artikel\ ball\ \=\ new\ Artikel(7896,\ "ball",\ 56,\ 15);\r\n\ \ \ \ Lager\ lager\ \=\ new\ Lager();\r\n\ \ \ \ lager.legeArtikelAn(trikot);\r\n\ \ \ \ lager.legeArtikelAn(ball);\r\n\ \ \ \ lager.applyToArticles(artikel\ ->\ artikel.setArtikelpreis(artikel.getArtikelpreis()\ +\ (artikel.getArtikelpreis()\ *\ 0.1)));\r\n\ \ \ \ System.out.println(trikot.toString());\r\n\ \ \ \ System.out.println(ball.toString());\r\n}
comment4.params=name
comment4.target=void\ setName(java.lang.String)
comment5.params=artikel
comment5.target=void\ legeArtikelAn(Artikel)
comment5.text=\r\n\ Anlegen\ eines\ Artikels.\ Es\ ist\ zu\ pruefen,\ ob\ die\r\n\ Artikelnummer\ bereits\ vergeben\ wurde\ und\ ob\ das\r\n\ Lager\ bereits\ voll\ ist.\r\n\r\n\ @param\ \ artikel\ \ ein\ Objekt\ der\ Klasse\ Artikel\r\n
comment6.params=artikelnummer
comment6.target=void\ loescheArtikel(int)
comment6.text=\r\n\ Artikel\ loeschen,\ wenn\ die\ Artikelnummer\ nicht\ existiert\ wird\ eine\ Fehlermeldung\ geworfen\r\n\r\n\ @param\ \ artikelnummer\ zu\ uebergebende\ Artikelnummer\r\n\r\n
comment7.params=artikelnummer\ bestand
comment7.target=void\ zugang(int,\ int)
comment7.text=\r\n\ Zugang\ von\ Artikeln\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ bestand\ einzuzahlender\ Bestand\ (>\ 0)\r\n
comment8.params=artikelnummer\ bestand
comment8.target=void\ abgang(int,\ int)
comment8.text=\r\n\ Abgang\ von\ Artikeln\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ bestand\ \ \ abuzahlende\ Menge\ (>\ 0)\r\n
comment9.params=artikelnummer\ prozentsatz
comment9.target=void\ aenderePreis(int,\ double)
comment9.text=\r\n\ Preis\ von\ Artikel(n)\ aendern\r\n\r\n\ @param\ \ artikelnummer\ \ \ zu\ uebergebende\ Artikelnummer\r\n\ @param\ \ prozentsatz\ \ \ \ abuzahlende\ Menge\ (>\ 0)\r\n
numComments=24
